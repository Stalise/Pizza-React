{"version":3,"sources":["pages/MainPage/MainPageSelect.js","components/UI/MyLi/MyLi.jsx","components/PizzaItemControl.jsx","components/UI/MyButton/MyButton.jsx","components/PizzaItem.jsx","utils/PizzaSortedHandler.js","components/PizzaSorted.jsx","assest/svg/SvgCart.jsx","components/Header.jsx","pages/MainPage/MainPage.jsx","components/CartDelete.jsx","components/CartItemControl.jsx","components/CartItem.jsx","components/CartProducts.jsx","pages/CartPage/CartPage.jsx","store/CartReducer.js","store/AuthoReducer.js","store/store.js","App.js","index.js"],"names":["tamingselect","document","getElementById","createTextNode","ts_triggeron","ts_triggeroff","ts_dropdownclosed","ts_dropdownopen","count","toreplace","sels","getElementsByTagName","i","length","ts_check","hiddenfield","createElement","name","type","id","value","options","parentNode","insertBefore","trigger","ts_addclass","href","onclick","ts_swapclass","this","appendChild","text","replaceUL","j","newli","newa","v","elm","istrigger","firstChild","nodeValue","div","uls","newform","newselect","newopt","innerHTML","onchange","window","location","selectedIndex","removeChild","o","c","RegExp","test","className","c1","c2","cn","replace","MyLi","children","props","PizzaItemControl","pizzaParametr","pizzaChangeDough","changeDough","e","dough","changeSize","size","onClick","MyButton","clsName","active","buttonActive","PizzaItem","pizza","dispatch","useDispatch","cartItems","useSelector","state","cartReducer","cartProduct","useState","setButtonActive","pizzaAdded","setPizzaAdded","price","average","pizzaParametrHandler","useEffect","fakeObj","substr","src","img","alt","target","classList","contains","mass","textContent","trim","productSize","pizzaCartInfo","numbPizzaCart","totalCount","totalPrice","payload","addCart","PizzaSortedHandler","activeType","currentSelect","pizzaItems","sortedPizzaHandler","filter","Object","keys","hasOwnProperty","fakePizza","sort","a","b","low","PizzaSorted","sortedPizza","setCurrentSelect","all","meat","cheese","vegan","sharp","setActiveType","sortedType","currentType","pizzaActive","elem","changeHandler","Svg_cart","color","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Header","totalCart","setTotalCart","reduce","item","to","SvgCart","MainPage","pepperoni","high","traditional","thin","ham_cheese","double_chicken","cheese_chiken","mexican","pepperoni_fresh","four_cheese","veg_mush","pizza_pie","isLoadind","onSubmit","event","preventDefault","map","index","CartDelete","currentProduct","fakeCartItems","prod","CartItemControl","pizzaTotal","pizzaTotalHandler","priceProduct","countTotal","costTotal","orderValues","setOrderValues","changeQuantity","forEach","arr","quantity","Fragment","onChange","CartItem","Math","random","toFixed","CartProducts","cartCount","cartlPrice","CartPage","cartContent","authoState","authorization","rootReducer","combineReducers","action","authoReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.5642a89f.chunk.js","sourcesContent":["\r\nfunction tamingselect() {\r\n\r\n   if (!document.getElementById && !document.createTextNode) { return; }\r\n\r\n   // Classes for the link and the visible dropdown\r\n   var ts_selectclass = 'turnintodropdown'; \t// class to identify selects\r\n   var ts_listclass = 'turnintoselect';\t\t// class to identify ULs\r\n   var ts_boxclass = 'dropcontainer'; \t\t// parent element\r\n   var ts_triggeron = 'activetrigger'; \t\t// class for the active trigger link\r\n   var ts_triggeroff = 'trigger';\t\t\t// class for the inactive trigger link\r\n   var ts_dropdownclosed = 'dropdownhidden'; // closed dropdown\r\n   var ts_dropdownopen = 'dropdownvisible';\t// open dropdown\r\n   /*\r\n      Turn all selects into DOM dropdowns\r\n   */\r\n   var count = 0;\r\n   var toreplace = [];\r\n   var sels = document.getElementsByTagName('select');\r\n   for (var i = 0; i < sels.length; i++) {\r\n      if (ts_check(sels[i], ts_selectclass)) {\r\n         var hiddenfield = document.createElement('input');\r\n         hiddenfield.name = sels[i].name;\r\n         hiddenfield.type = 'hidden';\r\n         hiddenfield.id = sels[i].id;\r\n         hiddenfield.value = sels[i].options[0].value;\r\n         sels[i].parentNode.insertBefore(hiddenfield, sels[i])\r\n         var trigger = document.createElement('a');\r\n         ts_addclass(trigger, ts_triggeroff);\r\n         trigger.href = '#';\r\n         trigger.onclick = function () {\r\n            ts_swapclass(this, ts_triggeroff, ts_triggeron)\r\n            ts_swapclass(this.parentNode.getElementsByTagName('ul')[0], ts_dropdownclosed, ts_dropdownopen);\r\n            return false;\r\n         }\r\n         trigger.appendChild(document.createTextNode(sels[i].options[0].text));\r\n         sels[i].parentNode.insertBefore(trigger, sels[i]);\r\n         var replaceUL = document.createElement('ul');\r\n         for (var j = 0; j < sels[i].getElementsByTagName('option').length; j++) {\r\n            var newli = document.createElement('li');\r\n            var newa = document.createElement('a');\r\n            newli.v = sels[i].getElementsByTagName('option')[j].value;\r\n            newli.elm = hiddenfield;\r\n            newli.istrigger = trigger;\r\n            newa.href = '#';\r\n            newa.appendChild(document.createTextNode(\r\n               sels[i].getElementsByTagName('option')[j].text));\r\n            newli.onclick = function () {\r\n               this.elm.value = this.v;\r\n               ts_swapclass(this.istrigger, ts_triggeron, ts_triggeroff);\r\n               ts_swapclass(this.parentNode, ts_dropdownopen, ts_dropdownclosed)\r\n               this.istrigger.firstChild.nodeValue = this.firstChild.firstChild.nodeValue;\r\n               return false;\r\n            }\r\n            newli.appendChild(newa);\r\n            replaceUL.appendChild(newli);\r\n         }\r\n         ts_addclass(replaceUL, ts_dropdownclosed);\r\n         var div = document.createElement('div');\r\n         div.appendChild(replaceUL);\r\n         ts_addclass(div, ts_boxclass);\r\n         sels[i].parentNode.insertBefore(div, sels[i])\r\n         toreplace[count] = sels[i];\r\n         count++;\r\n      }\r\n   }\r\n\r\n   var uls = document.getElementsByTagName('ul');\r\n   for (0; i < uls.length; i++) {\r\n      if (ts_check(uls[i], ts_listclass)) {\r\n         var newform = document.createElement('form');\r\n         var newselect = document.createElement('select');\r\n         for (j = 0; j < uls[i].getElementsByTagName('a').length; j++) {\r\n            var newopt = document.createElement('option');\r\n            newopt.value = uls[i].getElementsByTagName('a')[j].href;\r\n            newopt.appendChild(document.createTextNode(uls[i].getElementsByTagName('a')[j].innerHTML));\r\n            newselect.appendChild(newopt);\r\n         }\r\n         newselect.onchange = function () {\r\n            window.location = this.options[this.selectedIndex].value;\r\n         }\r\n         newform.appendChild(newselect);\r\n         uls[i].parentNode.insertBefore(newform, uls[i]);\r\n         toreplace[count] = uls[i];\r\n         count++;\r\n      }\r\n   }\r\n   for (i = 0; i < count; i++) {\r\n      toreplace[i].parentNode.removeChild(toreplace[i]);\r\n   }\r\n   function ts_check(o, c) {\r\n      return new RegExp('\\\\b' + c + '\\\\b').test(o.className);\r\n   }\r\n   function ts_swapclass(o, c1, c2) {\r\n      var cn = o.className\r\n      o.className = !ts_check(o, c1) ? cn.replace(c2, c1) : cn.replace(c1, c2);\r\n   }\r\n   function ts_addclass(o, c) {\r\n      if (!ts_check(o, c)) { o.className += o.className === '' ? c : ' ' + c; }\r\n   }\r\n}\r\n\r\nexport default tamingselect\r\n\r\n// window.onload = function () {\r\n//    tamingselect();\r\n// }","\r\n\r\nlet MyLi = ({ children, ...props }) => {\r\n\r\n   return (\r\n      <li {...props}> {children} </li>\r\n   )\r\n}\r\n\r\nexport default MyLi","import React from 'react';\r\nimport MyLi from './UI/MyLi/MyLi.jsx';\r\n\r\nlet PizzaItemControl = ({ pizzaParametr, pizzaChangeDough }) => {\r\n\r\n   let changeDough = (e) => {\r\n      // вызывается в каждом пункте, если он совпадает с данными из стейта, то на него вешается класс\r\n      if (e === pizzaParametr[0].dough) {\r\n         return '_active'\r\n      }\r\n   }\r\n\r\n   let changeSize = (e) => {\r\n      if (e === pizzaParametr[1].size) {\r\n         return '_active'\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"pizza-item__select-container\">\r\n         <ul className=\"pizza-item__type\">\r\n            <MyLi\r\n               onClick={(e) => pizzaChangeDough(e)}\r\n               className={`pizza-item__type ${changeDough('тонкое')} `}\r\n            >тонкое</MyLi>\r\n\r\n            <MyLi\r\n               onClick={(e) => pizzaChangeDough(e)}\r\n               className={`pizza-item__type ${changeDough('традиционное')} `}\r\n            >традиционное</MyLi>\r\n\r\n         </ul>\r\n\r\n         <ul className=\"pizza-item__size\">\r\n            <MyLi\r\n               onClick={(e) => pizzaChangeDough(e, 'low')}\r\n               className={`pizza-item__size ${changeSize('25 см.')} `}\r\n            >25 см.</MyLi>\r\n\r\n            <MyLi\r\n               onClick={(e) => pizzaChangeDough(e, 'average')}\r\n               className={`pizza-item__size ${changeSize('30 см.')} `}\r\n            >30 см.</MyLi>\r\n\r\n            <MyLi\r\n               onClick={(e) => pizzaChangeDough(e, 'high')}\r\n               className={`pizza-item__size ${changeSize('35 см.')} `}\r\n            >35 см.</MyLi>\r\n         </ul>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PizzaItemControl","\r\nlet MyButton = ({ children, clsName, active, buttonActive, ...props }) => {\r\n\r\n   // для компонента PizzaCategories. Если пропс приходит с классом _active, то он вешается на элемент\r\n   let activeClass = () => {\r\n\r\n      // active передается из кнопки в PizzaCategories, если в нем true, то применяется класс\r\n      if (active || buttonActive === true) {\r\n         let newName = clsName + ' _active';\r\n         return newName\r\n      } else { return clsName }\r\n   }\r\n\r\n   return (\r\n      <button className={activeClass()} {...props}> {children} </button>\r\n   )\r\n}\r\n\r\nexport default MyButton\r\n","import React, { useState, useEffect } from 'react';\r\nimport PizzaItemControl from './PizzaItemControl.jsx'\r\nimport MyButton from './UI/MyButton/MyButton.jsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nlet PizzaItem = ({ pizza }) => {\r\n\r\n   let dispatch = useDispatch()\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   let [buttonActive, setButtonActive] = useState(false)\r\n\r\n   // отображает заказанную текущую пиццу с указанными размероми\r\n   let [pizzaAdded, setPizzaAdded] = useState({\r\n      25: false, 30: false, 35: false\r\n   })\r\n\r\n   // стейт с выбранными параметрами пиццы\r\n   let [pizzaParametr, pizzaParametrHandler] = useState([\r\n      { dough: 'традиционное' },\r\n      { size: '30 см.' },\r\n      { price: pizza.price.average }\r\n   ])\r\n\r\n   // клик на размер или тип теста, после меняется стейт pizzaParametr и передает в пропс\r\n   let pizzaChangeDough = (e, size) => {\r\n\r\n      // если клик по уже выбранному пункту, то return и стейт не меняется\r\n      if (e.target.classList.contains('_active')) { return }\r\n\r\n      // если клик по свободному элементу, то проверяется имя класса переданного через колбек\r\n      if (e.target.classList.contains('pizza-item__type')) {\r\n         let mass = [...pizzaParametr];\r\n         mass[0].dough = e.target.textContent.trim();\r\n         pizzaParametrHandler([...mass]);\r\n\r\n      } else if (e.target.classList.contains('pizza-item__size')) {\r\n         let mass = pizzaParametr;\r\n         mass[1].size = e.target.textContent.trim();\r\n         // при выборе размера, колбек дополнительно возвращает размер пиццы,из него можно узнать цену\r\n         mass[2].price = pizza.price[size];\r\n         pizzaParametrHandler([...mass]);\r\n      }\r\n\r\n      // если пицца с таким размером уже добавлена в коризну, то запрещает ее добавлять еще раз\r\n      pizzaAdded[pizzaParametr[1].size.substr(0, 2)] ? setButtonActive(true) : setButtonActive(false)\r\n   }\r\n\r\n   let addCart = () => {\r\n      // в стейте изменяем состоянее для выбранного размера заказа, чтобы запретить повторный клик\r\n      let productSize = pizzaParametr[1].size.substr(0, 2)\r\n      let fakeObj = { ...pizzaAdded }\r\n      // на размере пиццы ставим флаг true\r\n      fakeObj[productSize] = true\r\n      setPizzaAdded({ ...fakeObj })\r\n      if (fakeObj[productSize] === true) { setButtonActive(true) }\r\n\r\n      // создает объект с данными выбранной пиццы, и добавляет в глобальный стейт\r\n      let pizzaCartInfo = {\r\n         dough: pizzaParametr[0].dough,\r\n         size: pizzaParametr[1].size,\r\n         price: pizzaParametr[2].price,\r\n         img: './images/' + pizza.img,\r\n         name: pizza.name,\r\n         numbPizzaCart: null,\r\n         totalCount: 1,\r\n         totalPrice: pizzaParametr[2].price,\r\n      }\r\n\r\n      // cartItemsHandler([...cartItems, { ...pizzaCartInfo }])\r\n      dispatch({ type: \"ADD_CART\", payload: pizzaCartInfo })\r\n   }\r\n\r\n   // при рендеринге страницы мы проверяем есть ли указанная пицца в стейте заказа, и какие размеры заказаны\r\n   useEffect(() => {\r\n      let fakeObj = { ...pizzaAdded }\r\n\r\n      for (let i of cartItems) {\r\n         // проверяем если текущий продукт совпадает с продуктом из стейта заказа \r\n         if (i.name === pizza.name) {\r\n            let productSize = i.size.substr(0, 2)\r\n            // на размере пиццы ставим флаг true в состоянии заказа pizzaAdded\r\n            fakeObj[productSize] = true\r\n         }\r\n      }\r\n      setPizzaAdded({ ...fakeObj })\r\n      if (fakeObj[30] === true) { setButtonActive(true) }\r\n   }, [cartItems])\r\n\r\n   return (\r\n      <div className=\"main-pizza__item pizza-item\">\r\n         <div className=\"pizza-item__picture\">\r\n            <img src={'./images/' + pizza.img} alt={'Pizza'} />\r\n         </div>\r\n         <div className=\"pizza-item__content\">\r\n            <p className=\"pizza-item__title\">{pizza.name}</p>\r\n            <PizzaItemControl\r\n               pizza={pizza}\r\n               pizzaParametr={pizzaParametr}\r\n               pizzaChangeDough={pizzaChangeDough}\r\n            />\r\n            <div className=\"pizza-item__bottom\">\r\n               <p className=\"pizza-item__price\">{pizzaParametr[2].price} <span>₽</span></p>\r\n               <MyButton\r\n                  onClick={() => addCart()}\r\n                  clsName=\"pizza-item__button\"\r\n                  buttonActive={buttonActive}\r\n               > Добавить </MyButton>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PizzaItem","export let PizzaSortedHandler = (activeType, currentSelect, pizzaItems, sortedPizzaHandler) => {\r\n\r\n   // фильтруем пиццы по параметру из кнопки\r\n   let mass = [...pizzaItems].filter((pizza) => {\r\n      let namePizza = Object.keys(pizza)[0]\r\n      if (pizza[namePizza].type.hasOwnProperty(activeType)) { return pizza }\r\n   })\r\n\r\n   // в зависимости от выбранного селекта, сортирует пиццы\r\n   if (currentSelect === '1') {\r\n      sortedPizzaHandler([...mass])\r\n   } else if (currentSelect === '2') {\r\n      let fakePizza = [...mass].sort((a, b) => {\r\n         return b[Object.keys(b)[0]].price.low - a[Object.keys(a)[0]].price.low\r\n      })\r\n      sortedPizzaHandler([...fakePizza])\r\n   } else if (currentSelect === '3') {\r\n      let fakePizza = [...mass].sort((a, b) => {\r\n         return a[Object.keys(a)[0]].price.low - b[Object.keys(b)[0]].price.low\r\n      })\r\n      sortedPizzaHandler([...fakePizza])\r\n   }\r\n}","import React, { useState, useEffect, ReactFragment } from 'react';\r\nimport tamingselect from '../pages/MainPage/MainPageSelect.js';\r\nimport MyButton from './UI/MyButton/MyButton.jsx';\r\nimport { PizzaSortedHandler } from '../utils/PizzaSortedHandler.js';\r\n\r\nlet PizzaSorted = ({ pizzaItems, sortedPizza, sortedPizzaHandler }) => {\r\n\r\n   let [currentSelect, setCurrentSelect] = useState('1')\r\n\r\n   let [activeType, setActiveType] = useState({\r\n      all: false,\r\n      meat: false,\r\n      cheese: false,\r\n      vegan: false,\r\n      sharp: false,\r\n   })\r\n\r\n   let sortedType = (currentType) => {\r\n      //при клике на кнопку категорий. обновляет стейт, сбрасывая состояние кнопок, и присваивая нужной true\r\n      let pizzaActive = {\r\n         all: false,\r\n         meat: false,\r\n         cheese: false,\r\n         vegan: false,\r\n         sharp: false,\r\n      }\r\n\r\n      // currentType берется параметром из клика по кнопке\r\n      pizzaActive[currentType] = true\r\n      setActiveType({ ...pizzaActive })\r\n\r\n      PizzaSortedHandler(currentType, currentSelect, pizzaItems, sortedPizzaHandler)\r\n   }\r\n\r\n   let changeHandler = () => {\r\n      // отлавливает изменения value в select, и передает в стейт\r\n      let elem = document.getElementById('select_id');\r\n      if (currentSelect !== elem.value) {\r\n         setCurrentSelect(elem.value)\r\n\r\n         for (let i of Object.keys(activeType)) {\r\n            if (activeType[i] === true) { PizzaSortedHandler(i, elem.value, pizzaItems, sortedPizzaHandler) }\r\n         }\r\n      }\r\n   }\r\n\r\n   // запускает в работу библиотеку с select при рендере страницы\r\n   useEffect(() => {\r\n      tamingselect()\r\n      setActiveType({ ...activeType, all: true })\r\n   }, [])\r\n\r\n   return (\r\n      <div className=\"main-pizza__navigation\">\r\n         <div className=\"main-pizza__categories\">\r\n            <MyButton\r\n               onClick={() => sortedType('all')}\r\n               clsName={\"main-pizza__categories-button\"}\r\n               active={activeType.all}\r\n            >\r\n               Все\r\n            </MyButton>\r\n\r\n            <MyButton\r\n               onClick={() => sortedType('meat')}\r\n               clsName={\"main-pizza__categories-button\"}\r\n               active={activeType.meat}\r\n            >\r\n               Мясные\r\n            </MyButton>\r\n\r\n            <MyButton\r\n               onClick={() => sortedType('cheese')}\r\n               clsName={\"main-pizza__categories-button\"}\r\n               active={activeType.cheese}\r\n            >\r\n               Сырные\r\n            </MyButton>\r\n\r\n            <MyButton\r\n               onClick={() => sortedType('vegan')}\r\n               clsName={\"main-pizza__categories-button\"}\r\n               active={activeType.vegan}\r\n            >\r\n               Вегетарианские\r\n            </MyButton>\r\n\r\n            <MyButton\r\n               onClick={() => sortedType('sharp')}\r\n               clsName={\"main-pizza__categories-button\"}\r\n               active={activeType.sharp}\r\n            >\r\n               Острые\r\n            </MyButton>\r\n         </div>\r\n\r\n         <div className=\"main-pizza__sort\">\r\n            <span className=\"main-pizza__sort-title\">Сортировка по:</span>\r\n            <div onClick={() => changeHandler()} className=\"main-pizza__sort-select\">\r\n               <select id={'select_id'} name=\"select_sort\" className=\"turnintodropdown\">\r\n                  <option value=\"1\" >популярности</option>\r\n                  <option value=\"2\" >цене (макс)</option>\r\n                  <option value=\"3\" >цене (мин)</option>\r\n               </select>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default PizzaSorted","let Svg_cart = ({ color, width, height }) => {\r\n   return (\r\n      <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n         <path d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\" stroke={color} strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n         <path d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\" stroke={color} strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n         <path d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\" stroke={color} strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </svg>\r\n   )\r\n}\r\n\r\nexport default Svg_cart","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SvgCart from '../assest/svg/SvgCart';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nlet Header = () => {\r\n\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   let [totalCart, setTotalCart] = useState(0)\r\n\r\n   useEffect(() => {\r\n      setTotalCart(cartItems.reduce((count, item) => count + item.totalCount, 0))\r\n   }, [cartItems])\r\n\r\n   return (\r\n      <div className=\"header\">\r\n         <button className=\"header__login\">Войти</button>\r\n         <Link to=\"/React-Pizza/\" className=\"header__logo\">\r\n            <img src='./images/pizza-peace.png' alt=\"pizza-logo\" className=\"header__img\" />\r\n            <div className=\"header__logo-text\">\r\n               <p className=\"header__title\">REACT PIZZA</p>\r\n               <p className=\"header__subtitle\">самая вкусная пицца</p>\r\n            </div>\r\n         </Link>\r\n         <Link to={'/React-Pizza/cart'} className=\"header__cart\">\r\n            {<SvgCart color={'#fff'} />}\r\n            <p className=\"header__cart-number\">{totalCart}</p>\r\n         </Link>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react';\r\nimport './MainPage.scss';\r\nimport './MainPageSelect.scss';\r\nimport './MainPageSelect.js';\r\nimport PizzaItem from '../../components/PizzaItem';\r\nimport PizzaSorted from '../../components/PizzaSorted.jsx';\r\nimport Header from '../../components/Header.jsx';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n// import { requestPizzas } from '../../store/asyncPizzas.js';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n   const cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   // стейт с пиццами\r\n   let [pizzaItems, pizzaItemsHandler] = useState([\r\n      {\r\n         pepperoni: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n            },\r\n            name: 'Пепперони',\r\n            img: 'pepperoni.jpeg',\r\n            price: {\r\n               low: 395,\r\n               average: 639,\r\n               high: 789,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         cheese: {\r\n            type: {\r\n               all: true,\r\n               cheese: true,\r\n               vegan: true,\r\n            },\r\n            name: 'Сырная 🌱',\r\n            img: 'cheese.jpeg',\r\n            price: {\r\n               low: 245,\r\n               average: 449,\r\n               high: 589,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         ham_cheese: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n            },\r\n            name: 'Ветчина и грибы',\r\n            img: 'ham-cheese.jpeg',\r\n            price: {\r\n               low: 345,\r\n               average: 539,\r\n               high: 699,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         double_chicken: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n            },\r\n            name: 'Двойной цыпленок',\r\n            img: 'double-chicken.jpeg',\r\n            price: {\r\n               low: 295,\r\n               average: 449,\r\n               high: 589,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         cheese_chiken: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n            },\r\n            name: 'Сырный цыпленок',\r\n            img: 'cheese-chiken.jpg',\r\n            price: {\r\n               low: 395,\r\n               average: 639,\r\n               high: 789,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         mexican: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n               sharp: true,\r\n            },\r\n            name: 'Мексиканская 🌶️🌶️',\r\n            img: 'mexican.jpg',\r\n            price: {\r\n               low: 445,\r\n               average: 699,\r\n               high: 849,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         pepperoni_fresh: {\r\n            type: {\r\n               all: true,\r\n               meat: true,\r\n               cheese: true,\r\n            },\r\n            name: 'Пепперони фреш',\r\n            img: 'pepperoni-fresh.jpeg',\r\n            price: {\r\n               low: 245,\r\n               average: 449,\r\n               high: 589,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         four_cheese: {\r\n            type: {\r\n               all: true,\r\n               cheese: true,\r\n               vegan: true,\r\n            },\r\n            name: 'Четыре сыра 🌱',\r\n            img: 'four-cheese.jpeg',\r\n            price: {\r\n               low: 445,\r\n               average: 699,\r\n               high: 849,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         veg_mush: {\r\n            type: {\r\n               all: true,\r\n               cheese: true,\r\n               vegan: true,\r\n            },\r\n            name: 'Овощи и грибы 🌱',\r\n            img: 'veg-mush.jpeg',\r\n            price: {\r\n               low: 395,\r\n               average: 639,\r\n               high: 789,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n      {\r\n         pizza_pie: {\r\n            type: {\r\n               all: true,\r\n               vegan: true,\r\n            },\r\n            name: 'Пицца-пирог 🌱',\r\n            img: 'pizza-pie.jpg',\r\n            price: {\r\n               low: 345,\r\n               average: 539,\r\n               high: 699,\r\n            },\r\n            size: {\r\n               low: 25,\r\n               average: 30,\r\n               high: 35,\r\n            },\r\n            dough: {\r\n               traditional: true,\r\n               thin: true,\r\n            }\r\n\r\n         }\r\n      },\r\n   ])\r\n\r\n   const [sortedPizza, sortedPizzaHandler] = useState([...pizzaItems])\r\n   const [isLoadind, setIsLoading] = useState(false)\r\n\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <Header />\r\n\r\n         <div className=\"main\">\r\n            <div className=\"main__pizza main-pizza\">\r\n               <form onSubmit={(event) => event.preventDefault()}>\r\n\r\n                  <PizzaSorted\r\n                     pizzaItems={pizzaItems}\r\n                     sortedPizza={sortedPizza}\r\n                     sortedPizzaHandler={sortedPizzaHandler}\r\n                  />\r\n               </form>\r\n\r\n               <p className=\"main-pizza__title\">Пицца</p>\r\n               <div className=\"main-pizza__content\">\r\n                  {isLoadind\r\n                     ? <h1>HELLO</h1>\r\n                     :\r\n                     sortedPizza.map((item, index) => {\r\n                        let name = Object.keys(item)[0]\r\n                        return (\r\n                           <PizzaItem key={name} pizza={item[name]} />\r\n                        )\r\n                     })\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MainPage\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // let getPizzas = async () => {\r\n   //    let response = await axios.get('http://localhost:3001/pizzas')\r\n   //    pizzaItemsHandler([...response.data])\r\n   //    sortedPizzaHandler([...response.data])\r\n   // }\r\n\r\n   // useEffect(() => {\r\n   //    getPizzas()\r\n   // }, [])\r\n\r\n\r\n// let [pizzaItems, pizzaItemsHandler] = useState([\r\n//    {\r\n//       pepperoni: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//          },\r\n//          name: 'Пепперони',\r\n//          img: 'pepperoni.jpeg',\r\n//          price: {\r\n//             low: 395,\r\n//             average: 639,\r\n//             high: 789,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       cheese: {\r\n//          type: {\r\n//             all: true,\r\n//             cheese: true,\r\n//             vegan: true,\r\n//          },\r\n//          name: 'Сырная 🌱',\r\n//          img: 'cheese.jpeg',\r\n//          price: {\r\n//             low: 245,\r\n//             average: 449,\r\n//             high: 589,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       ham_cheese: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//          },\r\n//          name: 'Ветчина и грибы',\r\n//          img: 'ham-cheese.jpeg',\r\n//          price: {\r\n//             low: 345,\r\n//             average: 539,\r\n//             high: 699,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       double_chicken: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//          },\r\n//          name: 'Двойной цыпленок',\r\n//          img: 'double-chicken.jpeg',\r\n//          price: {\r\n//             low: 295,\r\n//             average: 449,\r\n//             high: 589,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       cheese_chiken: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//          },\r\n//          name: 'Сырный цыпленок',\r\n//          img: 'cheese-chiken.jpg',\r\n//          price: {\r\n//             low: 395,\r\n//             average: 639,\r\n//             high: 789,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       mexican: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//             sharp: true,\r\n//          },\r\n//          name: 'Мексиканская 🌶️🌶️',\r\n//          img: 'mexican.jpg',\r\n//          price: {\r\n//             low: 445,\r\n//             average: 699,\r\n//             high: 849,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       pepperoni_fresh: {\r\n//          type: {\r\n//             all: true,\r\n//             meat: true,\r\n//             cheese: true,\r\n//          },\r\n//          name: 'Пепперони фреш',\r\n//          img: 'pepperoni-fresh.jpeg',\r\n//          price: {\r\n//             low: 245,\r\n//             average: 449,\r\n//             high: 589,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       four_cheese: {\r\n//          type: {\r\n//             all: true,\r\n//             cheese: true,\r\n//             vegan: true,\r\n//          },\r\n//          name: 'Четыре сыра 🌱',\r\n//          img: 'four-cheese.jpeg',\r\n//          price: {\r\n//             low: 445,\r\n//             average: 699,\r\n//             high: 849,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       veg_mush: {\r\n//          type: {\r\n//             all: true,\r\n//             cheese: true,\r\n//             vegan: true,\r\n//          },\r\n//          name: 'Овощи и грибы 🌱',\r\n//          img: 'veg-mush.jpeg',\r\n//          price: {\r\n//             low: 395,\r\n//             average: 639,\r\n//             high: 789,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n//    {\r\n//       pizza_pie: {\r\n//          type: {\r\n//             all: true,\r\n//             vegan: true,\r\n//          },\r\n//          name: 'Пицца-пирог 🌱',\r\n//          img: 'pizza-pie.jpg',\r\n//          price: {\r\n//             low: 345,\r\n//             average: 539,\r\n//             high: 699,\r\n//          },\r\n//          size: {\r\n//             low: 25,\r\n//             average: 30,\r\n//             high: 35,\r\n//          },\r\n//          dough: {\r\n//             traditional: true,\r\n//             thin: true,\r\n//          }\r\n\r\n//       }\r\n//    },\r\n// ])","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nlet CartDelete = ({ currentProduct, fakeCartItems }) => {\r\n\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n   // console.log(cartItems)\r\n\r\n   let dispatch = useDispatch()\r\n\r\n   let deleteProduct = () => {\r\n      dispatch({ type: 'DELETE_PRODUCT', payload: fakeCartItems.filter((prod) => prod !== fakeCartItems[currentProduct]) })\r\n   }\r\n\r\n   return (\r\n      <div onClick={() => deleteProduct()} className=\"cart-item__delete\"></div>\r\n   )\r\n}\r\n\r\nexport default CartDelete","import React, { useState } from 'react';\r\nimport CartDelete from './CartDelete.jsx';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nlet CartItemControl = ({ fakeCartItems, currentProduct, pizzaTotal, pizzaTotalHandler }) => {\r\n\r\n   let dispatch = useDispatch()\r\n\r\n   let priceProduct = fakeCartItems[currentProduct].price;\r\n   //общие параметры заказа определенной питцы\r\n   let [orderValues, setOrderValues] = useState({\r\n      countTotal: 1,\r\n      costTotal: priceProduct,\r\n   })\r\n\r\n   let changeQuantity = (elem) => {\r\n      if (orderValues.countTotal >= 1 && orderValues.countTotal < 20 && elem === '+') {\r\n         setOrderValues({\r\n            ...orderValues,\r\n            countTotal: orderValues.countTotal + 1,\r\n            costTotal: orderValues.costTotal + priceProduct,\r\n         })\r\n\r\n         // записываем общее кол-во заказа в стейт с данными\r\n         fakeCartItems.forEach((elem, index, arr) => {\r\n            if (index === currentProduct) {\r\n               fakeCartItems[currentProduct].totalCount = orderValues.countTotal + 1\r\n               fakeCartItems[currentProduct].totalPrice = orderValues.costTotal + priceProduct\r\n            }\r\n         })\r\n\r\n         // при изменении кол-ва пицц в заказе, вызывает стейт где хранится общее количество товаров в заказе\r\n         pizzaTotalHandler({ ...pizzaTotal, quantity: pizzaTotal.quantity + 1, price: pizzaTotal.price + priceProduct })\r\n\r\n      } else if (orderValues.countTotal > 1 && orderValues.countTotal < 20 && elem === '-') {\r\n         setOrderValues({ ...orderValues, countTotal: orderValues.countTotal - 1 })\r\n\r\n         fakeCartItems.forEach((elem, index, arr) => {\r\n            if (index === currentProduct) {\r\n               fakeCartItems[currentProduct].totalCount = orderValues.countTotal - 1\r\n               fakeCartItems[currentProduct].totalPrice = orderValues.costTotal - priceProduct\r\n            }\r\n         })\r\n\r\n         pizzaTotalHandler({ ...pizzaTotal, quantity: pizzaTotal.quantity - 1, price: pizzaTotal.price - priceProduct })\r\n      }\r\n\r\n      dispatch({ type: 'UPDATE_CART', payload: [...fakeCartItems] })\r\n   }\r\n\r\n   // отображает в счетчике текущее количество заказанных пицц, которые хранятся в стейте, в объекте\r\n   useState(() => {\r\n      setOrderValues({\r\n         ...orderValues,\r\n         countTotal: fakeCartItems[currentProduct].totalCount,\r\n         costTotal: fakeCartItems[currentProduct].totalPrice\r\n      })\r\n   }, [])\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className=\"cart-item__quantity\">\r\n            <div onClick={() => changeQuantity('-')} className=\"cart-item__quantity-minus\"></div>\r\n            <div className=\"cart-item__quantity-total\">\r\n               <p className=\"cart-item__quantity-counter\">{orderValues.countTotal}</p>\r\n               <input onChange={() => null} className=\"cart-item__quantity-input\" value=\"1\"></input>\r\n            </div>\r\n            <div onClick={() => changeQuantity('+')} className=\"cart-item__quantity-plus\"></div>\r\n         </div>\r\n         <p className=\"cart-item__price\">{orderValues.costTotal} <span>₽</span></p>\r\n\r\n         <CartDelete\r\n            fakeCartItems={fakeCartItems}\r\n            currentProduct={currentProduct}\r\n         />\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\nexport default CartItemControl\r\n","import React, { useState } from 'react';\r\nimport CartItemControl from './CartItemControl.jsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nlet CartItem = ({ pizzaTotalHandler, pizzaTotal }) => {\r\n\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   let fakeCartItems = [...cartItems]\r\n\r\n   // нумерует новый массив с товарами в коризне, для доступа к ним\r\n   fakeCartItems.forEach((elem, index) => {\r\n      elem.numbPizzaCart = index\r\n   })\r\n\r\n   return (\r\n      cartItems === null\r\n         ? null\r\n         :\r\n         cartItems.map((elem, i) => {\r\n            return (\r\n               <div key={Math.random().toFixed(3)} className=\"main-cart__item cart-item\">\r\n                  <div className=\"cart-item__info\">\r\n                     <div className=\"cart-item__picture\">\r\n                        <img src={elem.img} className=\"cart-item__picture\" alt={'pizza'} />\r\n                     </div>\r\n                     <div className=\"cart-item__text\">\r\n                        <p className=\"cart-item__name\">{elem.name}</p>\r\n                        <p className=\"cart-item__parameters\">{elem.dough}, {elem.size}</p>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <CartItemControl\r\n                     currentProduct={i}\r\n                     fakeCartItems={fakeCartItems}\r\n                     pizzaTotalHandler={pizzaTotalHandler}\r\n                     pizzaTotal={pizzaTotal}\r\n                  />\r\n               </div>\r\n            )\r\n         })\r\n   )\r\n}\r\n\r\nexport default CartItem\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CartItem from './CartItem.jsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nlet CartProducts = () => {\r\n\r\n   let dispatch = useDispatch()\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   let [pizzaTotal, pizzaTotalHandler] = useState({\r\n      price: 0,\r\n      quantity: 0,\r\n   })\r\n\r\n   let cartCount = 0\r\n   let cartlPrice = 0\r\n\r\n   // получаем общее количество заказанных товаров в корзине\r\n   cartItems.forEach((elem) => {\r\n      cartCount = cartCount + elem.totalCount\r\n      cartlPrice += elem.totalPrice\r\n   })\r\n\r\n   let clearCart = () => {\r\n      dispatch({ type: 'CLEAR_CART' })\r\n   }\r\n\r\n   // реагирует на изменения общей цены и количества в переменных, после мнеяет стейт\r\n   useEffect(() => {\r\n      // console.log('ALO')\r\n      pizzaTotalHandler({ ...pizzaTotal, quantity: cartCount, price: cartlPrice })\r\n   }, [cartItems])\r\n\r\n   // при загрузке сразуп прописывает общее количество и стоимость товаров в корзине\r\n   useEffect(() => {\r\n      pizzaTotalHandler({ ...pizzaTotal, quantity: cartCount, price: cartlPrice })\r\n   }, [])\r\n\r\n   return (\r\n      <React.Fragment >\r\n         <div className=\"main-cart__top\">\r\n            <div className=\"main-cart__title\">\r\n               <img src=\"./images/cart-icon-big.png\" className=\"main-cart__title-icon\" alt='cart' />\r\n               <h1 className=\"main-cart__title-text\">Корзина</h1>\r\n            </div>\r\n            <div onClick={() => clearCart()} className=\"main-cart__clear\">\r\n               <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                  <path d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                  <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                  <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n               </svg>\r\n               <p className=\"main-cart__clear-text\">Очистить корзину</p>\r\n            </div>\r\n         </div>\r\n\r\n         <form className=\"main-cart__form\">\r\n            <CartItem\r\n               pizzaTotalHandler={pizzaTotalHandler}\r\n               pizzaTotal={pizzaTotal}\r\n            />\r\n         </form>\r\n\r\n         <div className=\"main-cart__bottom\">\r\n            <div className=\"main-cart__info\">\r\n               <p className=\"main-cart__total-products\">Всего товаров: <span>{pizzaTotal.quantity} шт.</span></p>\r\n               <p className=\"main-cart__total-price\">Сумма заказа <span>{pizzaTotal.price} ₽</span></p>\r\n            </div>\r\n            <div className=\"main-cart__buttons\">\r\n               <Link to=\"/React-Pizza/\" className=\"main-cart__back\">Вернуться назад</Link>\r\n               <button className=\"main-cart__pay\">Оплатить заказ</button>\r\n            </div>\r\n         </div>\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\nexport default CartProducts","import './CartPage.scss';\r\nimport CartProducts from '../../components/CartProducts.jsx';\r\nimport Header from '../../components/Header.jsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nlet CartPage = () => {\r\n\r\n   let cartItems = useSelector((state) => state.cartReducer.cartProduct)\r\n\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <Header />\r\n\r\n         <div className=\"main\">\r\n            <div className=\"main-cart\">\r\n               {cartItems.length > 0\r\n                  ? <CartProducts />\r\n                  :\r\n                  <div className=\"main-cart__empty\">\r\n                     <div className=\"main-cart__empty-text\">\r\n                        <p className=\"main-cart__empty-title\">Корзина пустая <span>🙁</span></p>\r\n                        <p className=\"main-cart__empty-subtle\">Вероятнее всего, вы не добавили еще товар в корзину.</p>\r\n                        <p className=\"main-cart__empty-subtle\">Для того чтобы это сделать, перейдите на главную страницу</p>\r\n                     </div>\r\n                     <div className=\"main-cart__empty-picture\">\r\n                        <img src=\"./images/cart-person.png\" alt={'cart-person'} />\r\n                     </div>\r\n                  </div>\r\n               }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CartPage","\r\n// это как-бы стейт с данными, которые можно изменять через redux\r\nlet cartContent = { cartProduct: [], }\r\n\r\n// функция которая изменяет наш redux-стейт по написанной логике. Данные берутся из переданного action\r\nexport let cartReducer = (state = cartContent, action) => {\r\n   switch (action.type) {\r\n      case \"ADD_CART\":\r\n         return { ...state, cartProduct: [...state.cartProduct, { ...action.payload }] }\r\n      case 'DELETE_PRODUCT':\r\n         return { ...state, cartProduct: [...action.payload] }\r\n      case 'CLEAR_CART':\r\n         return { ...state, cartProduct: [] }\r\n      case 'UPDATE_CART':\r\n         return { ...state, cartProduct: [...action.payload] }\r\n      default:\r\n         return state\r\n   }\r\n}","let authoState = {\r\n   authorization: false\r\n}\r\n\r\n// функция которая изменяет наш redux-стейт по написанной логике. Данные берутся из переданного action\r\nexport let authoReducer = (state = authoState, action) => {\r\n   switch (action.type) {\r\n      case \"setAutho\":\r\n         return { ...state, authorization: !state.authorization }\r\n      default:\r\n         return state\r\n   }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { cartReducer } from '../store/CartReducer.js';\r\nimport { authoReducer } from '../store/AuthoReducer.js';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n   cartReducer, authoReducer\r\n})\r\n\r\n// после того как reducer меняет что-то в стейте, он передает его в стор\r\nexport let store = createStore(rootReducer, composeWithDevTools((applyMiddleware(thunk))))\r\n\r\n// палиндромыч пример решения моего\r\n// for (let i = 0; i < Math.floor(a.length / 2); i++) {\r\n//    if ((a[i] !== a[a.length - (i + 1)] && i != Math.round(a.length / 2))) { console.log(' no ') }\r\n// }","import React, { useState } from 'react';\nimport './App.css';\nimport MainPage from './pages/MainPage/MainPage.jsx';\nimport CartPage from './pages/CartPage/CartPage.jsx';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\n\n\nfunction App() {\n   // в переменной хранится стор из redux, в котором находятся товары корзины\n\n   let [isAutho, setIsAutho] = useState(false)\n\n   return (\n      <Provider store={store}>\n         <BrowserRouter>\n            <Route exact={true} path='/React-Pizza/'>\n               <MainPage />\n            </Route>\n\n            <Route path='/React-Pizza/cart'>\n               <CartPage />\n            </Route>\n\n            <Redirect to='/React-Pizza/' />\n         </BrowserRouter>\n      </Provider>\n   )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}